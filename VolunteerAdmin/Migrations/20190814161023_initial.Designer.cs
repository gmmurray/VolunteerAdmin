// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using VolunteerAdmin.Data;

namespace VolunteerAdmin.Migrations
{
    [DbContext(typeof(AdminContext))]
    [Migration("20190814161023_initial")]
    partial class initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.6-servicing-10079")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("VolunteerAdmin.Models.Assignment", b =>
                {
                    b.Property<int>("AssignmentID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("OpportunityID");

                    b.Property<int>("VolunteerID");

                    b.HasKey("AssignmentID");

                    b.HasIndex("OpportunityID");

                    b.HasIndex("VolunteerID");

                    b.ToTable("Assignment");
                });

            modelBuilder.Entity("VolunteerAdmin.Models.Opportunity", b =>
                {
                    b.Property<int>("OpportunityID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CenterID");

                    b.Property<string>("Description");

                    b.Property<DateTime>("OpportunityDate");

                    b.Property<string>("OpportunityName");

                    b.HasKey("OpportunityID");

                    b.ToTable("Opportunity");
                });

            modelBuilder.Entity("VolunteerAdmin.Models.Volunteer", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address");

                    b.Property<bool?>("Approved");

                    b.Property<string>("AvailableTimes");

                    b.Property<string>("CellPhone");

                    b.Property<string>("Centers");

                    b.Property<bool>("DLCopyOnFile");

                    b.Property<string>("Education");

                    b.Property<string>("Email");

                    b.Property<string>("EmergencyAddress");

                    b.Property<string>("EmergencyEmail");

                    b.Property<string>("EmergencyHomePhone");

                    b.Property<string>("EmergencyName");

                    b.Property<string>("EmergencyWorkPhone");

                    b.Property<string>("FirstName");

                    b.Property<string>("HomePhone");

                    b.Property<string>("LastName");

                    b.Property<string>("Licenses");

                    b.Property<string>("Password");

                    b.Property<bool>("SSCopyOnFile");

                    b.Property<string>("Skills");

                    b.Property<string>("Username");

                    b.Property<string>("WorkPhone");

                    b.HasKey("ID");

                    b.ToTable("Volunteer");
                });

            modelBuilder.Entity("VolunteerAdmin.Models.Assignment", b =>
                {
                    b.HasOne("VolunteerAdmin.Models.Opportunity", "Opportunity")
                        .WithMany()
                        .HasForeignKey("OpportunityID")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("VolunteerAdmin.Models.Volunteer", "Volunteer")
                        .WithMany("Assignments")
                        .HasForeignKey("VolunteerID")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
